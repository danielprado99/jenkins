<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1520.v56d65e3b_4566">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4106.v7a_8a_8176d450">
    <script>pipeline {
    agent any
    stages {
        stage(&apos;Build Account&apos;) {
            steps {
                build job: &apos;account&apos;, wait: true, propagate: true
            }
        }
        stage(&apos;Build Account-Service&apos;) {
            steps {
                build job: &apos;account-service&apos;, wait: true, propagate: true
            }
        }
        stage(&apos;Build Auth&apos;) {
            steps {
                build job: &apos;auth&apos;, wait: true, propagate: true
            }
        }
        stage(&apos;Build Auth-Service&apos;) {
            steps {
                build job: &apos;auth-service&apos;, wait: true, propagate: true
            }
        }
        stage(&apos;Build Gateway-Service&apos;) {
            steps {
                build job: &apos;gateway-service&apos;, wait: true, propagate: true
            }
        }
        stage(&apos;Build Order&apos;) {
            steps {
                build job: &apos;order&apos;, wait: true, propagate: true
            }
        }
        stage(&apos;Build Order-Service&apos;) {
            steps {
                build job: &apos;order-service&apos;, wait: true, propagate: true
            }
        }
        stage(&apos;Build Product&apos;) {
            steps {
                build job: &apos;product&apos;, wait: true, propagate: true
            }
        }
        stage(&apos;Build Product-Service&apos;) {
            steps {
                build job: &apos;product-service&apos;, wait: true, propagate: true
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>